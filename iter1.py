# Итератор это обьект который может проходить через некоторые значения. Итератор содержит в себе два метода __iter__ и __next__
a=[1,2,3] # Списки, кортежи, строки и множества являются итерируемыми обьектами
b=iter(a)
print(b) # Итератор указывает на адрес при попытке вывести сам итератор
print(next(b))


# Работа с итераторами внутри класса
# Можно создать класс - итератор
class hand:
  def __iter__(self):
    self.a = 2
    return self
  
  def __next__(self):
    t=self.a
    self.a+=2
    return t


val=hand()
val.__iter__() # Вызов обьекта итератора и переменной внутри класса
print(val.__next__()) # Вызов метода __next__
print(val.__next__())
print()

h=iter(val) # Присваиваем переменной обьект итератора
print(next(h)) # Переменная играет роль итератора
print(next(h)) 